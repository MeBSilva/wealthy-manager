{
  "extends": [
    "airbnb-base",
    "plugin:@typescript-eslint/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "eslint-plugin-import", "import"],
  "rules": {
    "class-methods-use-this": "off",
    "consistent-return": "off",
    "no-empty-function": "off",
    "no-new": "off",
    "no-prototype-builtins": "off",
    "no-restricted-syntax": "off",
    "no-use-before-define": "off",
    "no-throw-literal": "off",
    "no-shadow": "off",
    "max-classes-per-file": "off",
    "no-console": "off",
    "import/prefer-default-export": "off",
    "import/extensions": "off",
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        "allow": ["private-constructors", "protected-constructors"]
      }
    ],
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-shadow": ["error"],
    "@typescript-eslint/no-namespace": "off",
    "@typescript-eslint/explicit-function-return-type": ["off"],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "argsIgnorePattern": "_"
      }
    ],
    "no-useless-constructor": "off",
    "no-underscore-dangle": "off",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": {
          "regex": "^[A-Z]",
          "match": true
        }
      }
    ]
  },
  "settings": {
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
      }
    }
  }
}
